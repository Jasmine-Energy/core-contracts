/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JasmineOracleV2,
  JasmineOracleV2Interface,
} from "../../src/JasmineOracleV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "InvalidMetadataVersion",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "MinterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCertificateType",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getEndorsement",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getFuelType",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getLocationData",
    outputs: [
      {
        internalType: "uint16",
        name: "countryCode",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "regionCode",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "subRegionCode",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getRegistry",
    outputs: [
      {
        internalType: "uint256",
        name: "registry",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getUUID",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getVintage",
    outputs: [
      {
        internalType: "uint256",
        name: "vintage",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasCertificateType",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasEndorsement",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasFuel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasRegistry",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "hasVintage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialMinter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encodedMetadata",
        type: "bytes",
      },
    ],
    name: "updateSeries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346100385730608052611888908161003e823960805181818161055b01528181610642015281816109cb0152610bae0152f35b600080fdfe60806040908082526004918236101561001757600080fd5b600092833560e01c9283630754617214610ef65750826307e3810c14610eb3578263193c045e14610e8a57826331702ae414610e615782633659cfe614610b85578263485cc9551461095e5782634ce78e5f1461092f5782634f1ef2861461060057826352d1902d1461053f57826354e69d0e146104f857826369cffd17146104c6578263715018a61461046057826379ba5097146103da5782637e75c601146103785782638da5cb5b146103505782638efb10401461031e578263bc5f8ccd146102ef578263d7c9d1c5146102c7578263dff2293a14610295578263e30c39781461026d578263f2fde38b14610200578263f3f1cf8d146101ca57508163f776e98d14610197575063fca3b5aa1461012f57600080fd5b34610194576020366003190112610194576001600160a01b03610150610ff3565b610158611071565b16806001600160601b0360a01b60fb54161760fb557fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a4258280a280f35b80fd5b9050346101c65760209163ffffffff826101b036611009565b9390815260fc8652205460081c16149051908152f35b5080fd5b909150346101fc5760203660031901126101fc578160209363ffffffff9235815260fc8552205460081c169051908152f35b8280fd5b83346101945760203660031901126101945761021a610ff3565b610222611071565b6001600160a01b0380911690816001600160601b0360a01b6065541617606555603354167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b8382346101c657816003193601126101c6576020906001600160a01b03606554169051908152f35b909150346101fc5760203660031901126101fc578160209363ffffffff9235815260fc8552205460281c169051908152f35b8382346101c6576020906102e46102dd36611009565b91906117c2565b509290505191148152f35b8382346101c65760209163ffffffff8261030836611009565b9390815260fc8652205460481c16149051908152f35b909150346101fc5760203660031901126101fc578160209363ffffffff9235815260fc8552205460481c169051908152f35b8382346101c657816003193601126101c6576020906001600160a01b03603354169051908152f35b909150346101fc5760203660031901126101fc57606092829135815261012f6020522090808051926103a984610f1b565b5461ffff9384821694858252808360101c169283602084015260201c16938491015281519384526020840152820152f35b9150346101fc57826003193601126101fc57336001600160a01b03606554160361040b57826104083361101f565b80f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b8334610194578060031936011261019457610479611071565b806001600160a01b036001600160601b0360a01b8060655416606555603354908116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90833461019457602036600319011261019457506001600160801b036104ee602093356117c2565b5050915191168152f35b9083346101945760603660031901126101945750610518602092356117c2565b929150506024358210159182610532575b50519015158152f35b6044351015915083610529565b8334610194578060031936011261019457506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361059857602082516000805160206118338339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b8390826003193601126101c657610615610ff3565b9060243567ffffffffffffffff811161092b576106359036908301610fa7565b936001600160a01b0390817f0000000000000000000000000000000000000000000000000000000000000000169161066f833014156110c9565b61068c60008051602061183383398151915293828554161461112a565b610694611071565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156106cd575050505061040891925061118b565b849193959294168351946352d1902d60e01b865260209586818981865afa8591816108f8575b5061075257855162461bcd60e51b8152808901889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9691929396036108a3576107658361118b565b8351917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a286511580159061089b575b6107a6575b5050505050905080f35b823b1561084c57505092808561082d95858398519201905af43d1561083957660819985a5b195960ca1b3d926107db84610f8b565b936107e882519586610f69565b84523d878686013e5b7f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c81519561081e87610f1b565b60278752860152840152611219565b5080828080808061079c565b660819985a5b195960ca1b6060926107f1565b62461bcd60e51b82528101849052602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b506001610797565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d8311610924575b6109108183610f69565b810103126109205751908a6106f3565b8580fd5b503d610906565b8380fd5b8382346101c65760209163ffffffff8261094836611009565b9390815260fc8652205460281c16149051908152f35b909150346101fc57816003193601126101fc57610979610ff3565b602435906001600160a01b039081831683036109205785549260ff8460081c161593848095610b78575b8015610b61575b15610b075760ff1981166001178855610a14919085610af6575b50610a0f847f0000000000000000000000000000000000000000000000000000000000000000166109f7813014156110c9565b8560008051602061183383398151915254161461112a565b61101f565b85549360ff8560081c1615610a9f57501692836001600160601b0360a01b60fb54161760fb5551927fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a4258580a2610a68578280f35b61ff0019168255600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b608490602087519162461bcd60e51b8352820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152fd5b61ffff1916610101178855386109c4565b865162461bcd60e51b8152602081880152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156109aa5750600160ff8216146109aa565b50600160ff8216106109a3565b909150346101fc5760208060031936011261092b57610ba2610ff3565b926001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016610bda813014156110c9565b610bf760008051602061183383398151915291838354161461112a565b610bff611071565b8251908482019282841067ffffffffffffffff851117610e4e578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c5957505050505050506104089061118b565b879894959697169085516352d1902d60e01b815287818a81865afa869181610e1b575b50610cdb57865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b97919293949703610dc657610cef8861118b565b8451917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8880a2825115801590610dbf575b610d31575b505050505050905080f35b873b15610d705750509380958192610d639651915af43d1561083957660819985a5b195960ca1b3d926107db84610f8b565b5080388080808080610d26565b62461bcd60e51b82528101859052602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b5086610d21565b845162461bcd60e51b8152908101869052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d8311610e47575b610e338183610f69565b81010312610e4357519038610c7c565b8680fd5b503d610e29565b634e487b7160e01b895260418752602489fd5b9083346101945760203660031901126101945750610e81602092356117c2565b92519283525050f35b9083346101945760203660031901126101945750610eaa602092356117c2565b50915191825250f35b9150346101fc573660031901126101c6576024359067ffffffffffffffff82116101fc57610ee76104089236908301610fa7565b90610ef0611759565b356113cb565b8490346101c657816003193601126101c6576020906001600160a01b0360fb54168152f35b6060810190811067ffffffffffffffff821117610f3757604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff821117610f3757604052565b90601f8019910116810190811067ffffffffffffffff821117610f3757604052565b67ffffffffffffffff8111610f3757601f01601f191660200190565b81601f82011215610fee57803590610fbe82610f8b565b92610fcc6040519485610f69565b82845260208383010111610fee57816000926020809301838601378301015290565b600080fd5b600435906001600160a01b0382168203610fee57565b6040906003190112610fee576004359060243590565b6001600160601b0360a01b9081606554166065556033546001600160a01b038092168093821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6001600160a01b0360335416330361108557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156110d057565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561113157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156111be576001600160a01b0360008051602061183383398151915291166001600160601b0360a01b825416179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b90919015611225575090565b8151156112355750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061127b575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611258565b519060ff82168203610fee57565b51906001600160801b0382168203610fee57565b519063ffffffff82168203610fee57565b519064ffffffffff82168203610fee57565b519061ffff82168203610fee57565b156112ef57565b60405162461bcd60e51b815260206004820152601c60248201527f4a61736d696e654f7261636c653a2055554944206d69736d61746368000000006044820152606490fd5b1561133b57565b606460405162461bcd60e51b815260206004820152602060248201527f4a61736d696e654f7261636c653a207265676973747279206d69736d617463686044820152fd5b1561138657565b60405162461bcd60e51b815260206004820152601f60248201527f4a61736d696e654f7261636c653a2076696e74616765206d69736d61746368006044820152606490fd5b815160209283818181019381010312610fee5760ff6113e983611294565b166001810361158657506113fb611759565b611404836117c2565b959194909360e084805181010312610fee5761141f90611294565b9361142c604085016112a2565b96611439606086016112b6565b91611446608087016112c7565b9061145360a088016112b6565b9860ff61146e60e061146760c08c016112b6565b9a016112b6565b99169a60018c0361153157926114af60fc98979695936114a164ffffffffff946001600160801b036114b69816146112e8565b63ffffffff80971614611334565b161461137f565b604051976114c389610f4d565b8852808389019716875280604089019516855260608801951685526000525260ff604060002094511663ffffffff60481b68ffffffff000000000064ffffffff008754965160081b16935160281b16935160481b16936cffffffffffffffffffffffffff1916171717179055565b60405162461bcd60e51b815260048101899052602760248201527f4a61736d696e654f7261636c653a20696e76616c6964206d65746164617461206044820152663b32b939b4b7b760c91b6064820152608490fd5b6002819592949503611741575061159c846117c2565b939190610140908187805181010312610fee576115b98794611294565b916040938486016115c9906112a2565b976115d6606088016112b6565b906115e3608089016112c7565b6115ef60a08a016112b6565b956115fc60c08b016112b6565b9461160960e08c016112b6565b966116176101008d016112d9565b9b61012001611625906112d9565b9e01611630906112d9565b9c6001600160801b031614611644906112e8565b63ffffffff8094161461165690611334565b64ffffffffff16146116679061137f565b85519461167386610f4d565b60ff1685528088860194168452808686019216825260608501921682528960005260fc875284600020935160ff168454935160081b64ffffffff0016915160281b68ffffffff000000000016925160481b63ffffffff60481b16936cffffffffffffffffffffffffff19161717171790558051956116f087610f1b565b61ffff80931687528284880196168652828288019516855260005261012f8352600020945116908454935160101b63ffff0000169251901b65ffff00000000169265ffffffffffff19161717179055565b60249060405190636d4499ed60e01b82526004820152fd5b6001600160a01b0360fb5416330361176d57565b60405162461bcd60e51b815260206004820152602760248201527f4a61736d696e654f7261636c653a2063616c6c6572206973206e6f74207468656044820152661036b4b73a32b960c91b6064820152608490fd5b9064ffffffffff8260381c1663ffffffff8360601c169166ffffffffffffff8460801c94166117ed57565b60405162461bcd60e51b815260206004820152601960248201527f4a61736d696e654f7261636c653a20696e76616c6964204944000000000000006044820152606490fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220f1a6b914ca2170185db6bba1f06f34b0c0cce61adbf89f14f5d105b5806262a764736f6c63430008110033";

type JasmineOracleV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JasmineOracleV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JasmineOracleV2__factory extends ContractFactory {
  constructor(...args: JasmineOracleV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JasmineOracleV2> {
    return super.deploy(overrides || {}) as Promise<JasmineOracleV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JasmineOracleV2 {
    return super.attach(address) as JasmineOracleV2;
  }
  override connect(signer: Signer): JasmineOracleV2__factory {
    return super.connect(signer) as JasmineOracleV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JasmineOracleV2Interface {
    return new utils.Interface(_abi) as JasmineOracleV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JasmineOracleV2 {
    return new Contract(address, _abi, signerOrProvider) as JasmineOracleV2;
  }
}
