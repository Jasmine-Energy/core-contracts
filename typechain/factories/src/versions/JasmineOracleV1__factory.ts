/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JasmineOracleV1,
  JasmineOracleV1Interface,
} from "../../../src/versions/JasmineOracleV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "MinterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getUUID",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasCertificateType",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasEndorsement",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasFuel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "query",
        type: "uint256",
      },
    ],
    name: "hasRegistry",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "hasVintage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialMinter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encodedMetadata",
        type: "bytes",
      },
    ],
    name: "updateSeries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a08060405234610038573060805261148c908161003e823960805181818161042101528181610508015281816108910152610a740152f35b600080fdfe60806040908082526004918236101561001757600080fd5b600092833560e01c92836307546172146110335750826307e3810c14610d275782633659cfe614610a4b578263485cc955146108245782634ce78e5f146107f55782634f1ef286146104c657826352d1902d1461040557826354e69d0e146103be57826369cffd171461038c578263715018a61461032657826379ba50971461029c575081638da5cb5b14610274578163bc5f8ccd14610245578163d7c9d1c51461021d578163e30c3978146101f5578163f2fde38b14610188578163f776e98d14610155575063fca3b5aa146100ed57600080fd5b34610152576020366003190112610152576001600160a01b0361010e611114565b610116611192565b16806001600160601b0360a01b60fb54161760fb557fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a4258280a280f35b80fd5b9050346101845760209163ffffffff8261016e3661112a565b9390815260fc8652205460081c16149051908152f35b5080fd5b8234610152576020366003190112610152576101a2611114565b6101aa611192565b6001600160a01b0380911690816001600160601b0360a01b6065541617606555603354167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b9050346101845781600319360112610184576020906001600160a01b03606554169051908152f35b9050346101845760209061023a6102333661112a565b91906113b5565b509290505191148152f35b9050346101845760209163ffffffff8261025e3661112a565b9390815260fc8652205460481c16149051908152f35b9050346101845781600319360112610184576020906001600160a01b03603354169051908152f35b915034610322578260031936011261032257336001600160a01b0360655416036102cd57826102ca33611140565b80f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b8280fd5b833461015257806003193601126101525761033f611192565b806001600160a01b036001600160601b0360a01b8060655416606555603354908116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90833461015257602036600319011261015257506001600160801b036103b4602093356113b5565b5050915191168152f35b90833461015257606036600319011261015257506103de602092356113b5565b9291505060243582101591826103f8575b50519015158152f35b60443510159150836103ef565b8334610152578060031936011261015257506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361045e57602082516000805160206114378339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b839082600319360112610184576104db611114565b9060243567ffffffffffffffff81116107f1576104fb90369083016110c8565b936001600160a01b0390817f00000000000000000000000000000000000000000000000000000000000000001691610535833014156111ea565b61055260008051602061143783398151915293828554161461124b565b61055a611192565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561059357505050506102ca9192506112ac565b849193959294168351946352d1902d60e01b865260209586818981865afa8591816107be575b5061061857855162461bcd60e51b8152808901889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9691929396036107695761062b836112ac565b8351917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2865115801590610761575b61066c575b5050505050905080f35b823b156107125750509280856106f395858398519201905af43d156106ff57660819985a5b195960ca1b3d926106a1846110ac565b936106ae8251958661108a565b84523d878686013e5b7f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c8151956106e487611058565b6027875286015284015261133a565b50808280808080610662565b660819985a5b195960ca1b6060926106b7565b62461bcd60e51b82528101849052602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b50600161065d565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d83116107ea575b6107d6818361108a565b810103126107e65751908a6105b9565b8580fd5b503d6107cc565b8380fd5b8382346101845760209163ffffffff8261080e3661112a565b9390815260fc8652205460281c16149051908152f35b9091503461032257816003193601126103225761083f611114565b602435906001600160a01b039081831683036107e65785549260ff8460081c161593848095610a3e575b8015610a27575b156109cd5760ff19811660011788556108da9190856109bc575b506108d5847f0000000000000000000000000000000000000000000000000000000000000000166108bd813014156111ea565b8560008051602061143783398151915254161461124b565b611140565b85549360ff8560081c161561096557501692836001600160601b0360a01b60fb54161760fb5551927fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a4258580a261092e578280f35b61ff0019168255600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b608490602087519162461bcd60e51b8352820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152fd5b61ffff19166101011788553861088a565b865162461bcd60e51b8152602081880152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156108705750600160ff821614610870565b50600160ff821610610869565b90915034610322576020806003193601126107f157610a68611114565b926001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016610aa0813014156111ea565b610abd60008051602061143783398151915291838354161461124b565b610ac5611192565b8251908482019282841067ffffffffffffffff851117610d14578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b1f57505050505050506102ca906112ac565b879894959697169085516352d1902d60e01b815287818a81865afa869181610ce1575b50610ba157865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b97919293949703610c8c57610bb5886112ac565b8451917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8880a2825115801590610c85575b610bf7575b505050505050905080f35b873b15610c365750509380958192610c299651915af43d156106ff57660819985a5b195960ca1b3d926106a1846110ac565b5080388080808080610bec565b62461bcd60e51b82528101859052602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b5086610be7565b845162461bcd60e51b8152908101869052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d8311610d0d575b610cf9818361108a565b81010312610d0957519038610b42565b8680fd5b503d610cef565b634e487b7160e01b895260418752602489fd5b91503461032257806003193601126103225781359060249067ffffffffffffffff908235828111610d0957610d5f90369087016110c8565b916001600160a01b0360fb54163303610fe157610d7b856113b5565b9096919560e086805181010312610fdd57602093848701519160ff8316809303610fd95786880151996001600160801b038b16809b03610fd557610dc160608a01611425565b9460808a01519164ffffffffff8316809303610fd157610de360a08c01611425565b9c610df060c08d01611425565b9b60e001610dfd90611425565b9c60018803610f7f5703610f3d5763ffffffff80971603610efd5703610ebc5786519a60808c019283118c841017610eab5750509160fc939186959360ff97528a5280838b019916895280858b019716875260608a019716875289525286209451166cffffffff00000000000000000068ffffffff000000000064ffffffff008754965160081b16935160281b16935160481b16936cffffffffffffffffffffffffff191617171717905580f35b634e487b7160e01b8d52604190528bfd5b8a601f606492888a519362461bcd60e51b85528401528201527f4a61736d696e654f7261636c653a2076696e74616765206d69736d61746368006044820152fd5b60648d8985818d519362461bcd60e51b85528401528201527f4a61736d696e654f7261636c653a207265676973747279206d69736d617463686044820152fd5b895162461bcd60e51b8152808f018a9052601c818601527f4a61736d696e654f7261636c653a2055554944206d69736d61746368000000006044820152606490fd5b5060848f6027878d8f519362461bcd60e51b85528401528201527f4a61736d696e654f7261636c653a20696e76616c6964206d65746164617461206044820152663b32b939b4b7b760c91b6064820152fd5b8e80fd5b8c80fd5b8b80fd5b8980fd5b815162461bcd60e51b81526020818801526027818601527f4a61736d696e654f7261636c653a2063616c6c6572206973206e6f74207468656044820152661036b4b73a32b960c91b6064820152608490fd5b8490346101845781600319360112610184576020906001600160a01b0360fb54168152f35b6060810190811067ffffffffffffffff82111761107457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761107457604052565b67ffffffffffffffff811161107457601f01601f191660200190565b81601f8201121561110f578035906110df826110ac565b926110ed604051948561108a565b8284526020838301011161110f57816000926020809301838601378301015290565b600080fd5b600435906001600160a01b038216820361110f57565b604090600319011261110f576004359060243590565b6001600160601b0360a01b9081606554166065556033546001600160a01b038092168093821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6001600160a01b036033541633036111a657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156111f157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561125257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156112df576001600160a01b0360008051602061143783398151915291166001600160601b0360a01b825416179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b90919015611346575090565b8151156113565750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061139c575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611379565b9064ffffffffff8260381c1663ffffffff8360601c169166ffffffffffffff8460801c94166113e057565b60405162461bcd60e51b815260206004820152601960248201527f4a61736d696e654f7261636c653a20696e76616c6964204944000000000000006044820152606490fd5b519063ffffffff8216820361110f5756fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212203ed4cf952fd2cf0e41bceece79cc6bb0e601d8b7d164b9b23cacd88eeccd58d764736f6c63430008110033";

type JasmineOracleV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JasmineOracleV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JasmineOracleV1__factory extends ContractFactory {
  constructor(...args: JasmineOracleV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JasmineOracleV1> {
    return super.deploy(overrides || {}) as Promise<JasmineOracleV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JasmineOracleV1 {
    return super.attach(address) as JasmineOracleV1;
  }
  override connect(signer: Signer): JasmineOracleV1__factory {
    return super.connect(signer) as JasmineOracleV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JasmineOracleV1Interface {
    return new utils.Interface(_abi) as JasmineOracleV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JasmineOracleV1 {
    return new Contract(address, _abi, signerOrProvider) as JasmineOracleV1;
  }
}
