/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { JasmineEAT, JasmineEATInterface } from "../../src/JasmineEAT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Frozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "MinterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Thawed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "freeze",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "initialURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialMinter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "slashBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "thaw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newURI",
        type: "string",
      },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516133ca61005a6000396000818161082c0152818161086c015281816109cb01528181610a0b01528181610c5901528181610c990152610d2c01526133ca6000f3fe6080604052600436106101d75760003560e01c8063731133e911610102578063e30c397811610095578063f242432a11610064578063f242432a146105bb578063f2fde38b146105db578063f5298aca146105fb578063fca3b5aa1461061b57600080fd5b8063e30c397814610502578063e77cfaae14610520578063e985e9c514610540578063e9ac04401461058a57600080fd5b806398cd6153116100d157806398cd615314610474578063a22cb46514610494578063bd85b039146104b4578063d7a78db8146104e257600080fd5b8063731133e91461040157806379ba5097146104215780637c8a8970146104365780638da5cb5b1461045657600080fd5b8063463fd1af1161017a57806352d1902d1161014957806352d1902d146103975780636b20c454146103ac57806370f81f6c146103cc578063715018a6146103ec57600080fd5b8063463fd1af146103075780634e1273f4146103275780634f1ef286146103545780634f558e791461036757600080fd5b80630e89341c116101b65780630e89341c146102785780631f7fdffa146102a55780632eb2c2d6146102c75780633659cfe6146102e757600080fd5b8062fdd58e146101dc57806301ffc9a71461020f578063075461721461023f575b600080fd5b3480156101e857600080fd5b506101fc6101f7366004612595565b61063b565b6040519081526020015b60405180910390f35b34801561021b57600080fd5b5061022f61022a3660046125d5565b6106d7565b6040519015158152602001610206565b34801561024b57600080fd5b506101c354610260906001600160a01b031681565b6040516001600160a01b039091168152602001610206565b34801561028457600080fd5b506102986102933660046125f2565b610727565b604051610206919061265b565b3480156102b157600080fd5b506102c56102c03660046127ba565b6107bc565b005b3480156102d357600080fd5b506102c56102e2366004612853565b6107d6565b3480156102f357600080fd5b506102c56103023660046128fd565b610822565b34801561031357600080fd5b506102c5610322366004612918565b610901565b34801561033357600080fd5b50610347610342366004612976565b610b25565b6040516102069190612a7c565b6102c5610362366004612a8f565b610c4f565b34801561037357600080fd5b5061022f6103823660046125f2565b60009081526101916020526040902054151590565b3480156103a357600080fd5b506101fc610d1f565b3480156103b857600080fd5b506102c56103c7366004612ad3565b610dd3565b3480156103d857600080fd5b506102c56103e7366004612b47565b610de3565b3480156103f857600080fd5b506102c5610e6f565b34801561040d57600080fd5b506102c561041c366004612b7a565b610e83565b34801561042d57600080fd5b506102c5610e97565b34801561044257600080fd5b506102c5610451366004612ad3565b610f0e565b34801561046257600080fd5b506033546001600160a01b0316610260565b34801561048057600080fd5b506102c561048f366004612bcf565b611015565b3480156104a057600080fd5b506102c56104af366004612c0c565b611083565b3480156104c057600080fd5b506101fc6104cf3660046125f2565b6000908152610191602052604090205490565b3480156104ee57600080fd5b506102c56104fd3660046125f2565b61108e565b34801561050e57600080fd5b506065546001600160a01b0316610260565b34801561052c57600080fd5b506102c561053b3660046125f2565b6110da565b34801561054c57600080fd5b5061022f61055b366004612c48565b6001600160a01b03918216600090815261012e6020908152604080832093909416825291909152205460ff1690565b34801561059657600080fd5b5061022f6105a53660046125f2565b6101c46020526000908152604090205460ff1681565b3480156105c757600080fd5b506102c56105d6366004612c7b565b611123565b3480156105e757600080fd5b506102c56105f63660046128fd565b611168565b34801561060757600080fd5b506102c5610616366004612b47565b6111d9565b34801561062757600080fd5b506102c56106363660046128fd565b6111e4565b60006001600160a01b0383166106ab5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b50600081815261012d602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061070857506001600160e01b031982166303a24d0760e21b145b806106d157506301ffc9a760e01b6001600160e01b03198316146106d1565b606061012f805461073790612ce0565b80601f016020809104026020016040519081016040528092919081815260200182805461076390612ce0565b80156107b05780601f10610785576101008083540402835291602001916107b0565b820191906000526020600020905b81548152906001019060200180831161079357829003601f168201915b50505050509050919050565b6107c4611237565b6107d08484848461129e565b50505050565b6001600160a01b0385163314806107f257506107f2853361055b565b61080e5760405162461bcd60e51b81526004016106a290612d1a565b61081b85858585856113fa565b5050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361086a5760405162461bcd60e51b81526004016106a290612d68565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108b360008051602061334e833981519152546001600160a01b031690565b6001600160a01b0316146108d95760405162461bcd60e51b81526004016106a290612db4565b6108e2816115a9565b604080516000808252602082019092526108fe918391906115b1565b50565b600054610100900460ff16158080156109215750600054600160ff909116105b8061093b5750303b15801561093b575060005460ff166001145b61099e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106a2565b6000805460ff1916600117905580156109c1576000805461ff0019166101001790555b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a095760405162461bcd60e51b81526004016106a290612d68565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a5260008051602061334e833981519152546001600160a01b031690565b6001600160a01b031614610a785760405162461bcd60e51b81526004016106a290612db4565b610a818261171c565b610a89611735565b610a928461175c565b6101c380546001600160a01b0319166001600160a01b0385169081179091556040517fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a42590600090a280156107d0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60608151835114610b8a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016106a2565b6000835167ffffffffffffffff811115610ba657610ba661266e565b604051908082528060200260200182016040528015610bcf578160200160208202803683370190505b50905060005b8451811015610c4757610c1a858281518110610bf357610bf3612e00565b6020026020010151858381518110610c0d57610c0d612e00565b602002602001015161063b565b828281518110610c2c57610c2c612e00565b6020908102919091010152610c4081612e2c565b9050610bd5565b509392505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c975760405162461bcd60e51b81526004016106a290612d68565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ce060008051602061334e833981519152546001600160a01b031690565b6001600160a01b031614610d065760405162461bcd60e51b81526004016106a290612db4565b610d0f826115a9565b610d1b828260016115b1565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dbf5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106a2565b5060008051602061334e8339815191525b90565b610dde83838361178c565b505050565b610deb6117cf565b60008281526101c4602052604090205460ff16610e4a5760405162461bcd60e51b815260206004820152601d60248201527f4a61736d696e654541543a20736572696573206e6f742066726f7a656e00000060448201526064016106a2565b6000610e56848461063b565b905081811015610e64578091505b6107d0848484611829565b610e776117cf565b610e81600061171c565b565b610e8b611237565b6107d08484848461194c565b60655433906001600160a01b03168114610f055760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016106a2565b6108fe8161171c565b610f166117cf565b60005b8251811015611009576000838281518110610f3657610f36612e00565b60209081029190910181015160008181526101c490925260409091205490915060ff16610fa55760405162461bcd60e51b815260206004820152601d60248201527f4a61736d696e654541543a20736572696573206e6f742066726f7a656e00000060448201526064016106a2565b6000610fb1868361063b565b9050838381518110610fc557610fc5612e00565b6020026020010151811015610ff45780848481518110610fe757610fe7612e00565b6020026020010181815250505b5050808061100190612e2c565b915050610f19565b50610dde838383611a2f565b61101d6117cf565b805160000361107a5760405162461bcd60e51b8152602060048201526024808201527f4a61736d696e654541543a206e6577205552492063616e6e6f7420626520656d604482015263383a3c9760e11b60648201526084016106a2565b6108fe81611bd0565b610d1b338383611bdd565b6110966117cf565b60008181526101c46020526040808220805460ff191660011790555182917f4d69b51fee53c28bd8b61fe008151577ca65160b5248f6225e74d64fd4cf732891a250565b6110e26117cf565b60008181526101c46020526040808220805460ff191690555182917fd7ea826caa575891b88b771d03fe1da3092d4a65c5adeaccc99be085978cebe891a250565b6001600160a01b03851633148061113f575061113f853361055b565b61115b5760405162461bcd60e51b81526004016106a290612d1a565b61081b8585858585611cbe565b6111706117cf565b606580546001600160a01b0383166001600160a01b031990911681179091556111a16033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610dde838383611dfc565b6111ec6117cf565b6101c380546001600160a01b0319166001600160a01b0383169081179091556040517fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a42590600090a250565b6101c3546001600160a01b03163314610e815760405162461bcd60e51b8152602060048201526024808201527f4a61736d696e654541543a2063616c6c6572206973206e6f7420746865206d69604482015263373a32b960e11b60648201526084016106a2565b6001600160a01b0384166112c45760405162461bcd60e51b81526004016106a290612e45565b81518351146112e55760405162461bcd60e51b81526004016106a290612e86565b336112f581600087878787611e3f565b60005b84518110156113925783818151811061131357611313612e00565b602002602001015161012d600087848151811061133257611332612e00565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461137a9190612ece565b9091555081905061138a81612e2c565b9150506112f8565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516113e3929190612ee1565b60405180910390a461081b81600087878787611efe565b815183511461141b5760405162461bcd60e51b81526004016106a290612e86565b6001600160a01b0384166114415760405162461bcd60e51b81526004016106a290612f06565b33611450818787878787611e3f565b60005b845181101561153b57600085828151811061147057611470612e00565b60200260200101519050600085838151811061148e5761148e612e00565b602090810291909101810151600084815261012d835260408082206001600160a01b038e1683529093529190912054909150818110156114e05760405162461bcd60e51b81526004016106a290612f4b565b600083815261012d602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611520908490612ece565b925050819055505050508061153490612e2c565b9050611453565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161158b929190612ee1565b60405180910390a46115a1818787878787611efe565b505050505050565b6108fe6117cf565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156115e457610dde83612059565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561163e575060408051601f3d908101601f1916820190925261163b91810190612f95565b60015b6116a15760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106a2565b60008051602061334e83398151915281146117105760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106a2565b50610dde8383836120f5565b606580546001600160a01b03191690556108fe8161211a565b600054610100900460ff16610e815760405162461bcd60e51b81526004016106a290612fae565b600054610100900460ff166117835760405162461bcd60e51b81526004016106a290612fae565b6108fe8161216c565b6001600160a01b0383163314806117a857506117a8833361055b565b6117c45760405162461bcd60e51b81526004016106a290612d1a565b610dde838383611a2f565b6033546001600160a01b03163314610e815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a2565b6001600160a01b03831661184f5760405162461bcd60e51b81526004016106a290612ff9565b33600061185b84612193565b9050600061186884612193565b905061188883876000858560405180602001604052806000815250611e3f565b600085815261012d602090815260408083206001600160a01b038a168452909152902054848110156118cc5760405162461bcd60e51b81526004016106a29061303c565b600086815261012d602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46040805160208101909152600090525b50505050505050565b6001600160a01b0384166119725760405162461bcd60e51b81526004016106a290612e45565b33600061197e85612193565b9050600061198b85612193565b905061199c83600089858589611e3f565b600086815261012d602090815260408083206001600160a01b038b168452909152812080548792906119cf908490612ece565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611943836000898989896121de565b6001600160a01b038316611a555760405162461bcd60e51b81526004016106a290612ff9565b8051825114611a765760405162461bcd60e51b81526004016106a290612e86565b6000339050611a9981856000868660405180602001604052806000815250611e3f565b60005b8351811015611b63576000848281518110611ab957611ab9612e00565b602002602001015190506000848381518110611ad757611ad7612e00565b602090810291909101810151600084815261012d835260408082206001600160a01b038c168352909352919091205490915081811015611b295760405162461bcd60e51b81526004016106a29061303c565b600092835261012d602090815260408085206001600160a01b038b1686529091529092209103905580611b5b81612e2c565b915050611a9c565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611bb4929190612ee1565b60405180910390a46040805160208101909152600090526107d0565b61012f610d1b82826130c6565b816001600160a01b0316836001600160a01b031603611c505760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016106a2565b6001600160a01b03838116600081815261012e6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611ce45760405162461bcd60e51b81526004016106a290612f06565b336000611cf085612193565b90506000611cfd85612193565b9050611d0d838989858589611e3f565b600086815261012d602090815260408083206001600160a01b038c16845290915290205485811015611d515760405162461bcd60e51b81526004016106a290612f4b565b600087815261012d602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611d91908490612ece565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611df1848a8a8a8a8a6121de565b505050505050505050565b6001600160a01b038316331480611e185750611e18833361055b565b611e345760405162461bcd60e51b81526004016106a290612d1a565b610dde838383611829565b6001600160a01b03841615611ef05760005b8351811015611eee576101c46000858381518110611e7157611e71612e00565b60209081029190910181015182528101919091526040016000205460ff1615611edc5760405162461bcd60e51b815260206004820152601960248201527f4a61736d696e654541543a2066726f7a656e207365726965730000000000000060448201526064016106a2565b80611ee681612e2c565b915050611e51565b505b6115a1868686868686612299565b6001600160a01b0384163b156115a15760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611f429089908990889088908890600401613186565b6020604051808303816000875af1925050508015611f7d575060408051601f3d908101601f19168201909252611f7a918101906131e4565b60015b61202957611f89613201565b806308c379a003611fc25750611f9d61321c565b80611fa85750611fc4565b8060405162461bcd60e51b81526004016106a2919061265b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016106a2565b6001600160e01b0319811663bc197c8160e01b146119435760405162461bcd60e51b81526004016106a2906132a6565b6001600160a01b0381163b6120c65760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106a2565b60008051602061334e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6120fe83612415565b60008251118061210b5750805b15610dde576107d08383612455565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661107a5760405162461bcd60e51b81526004016106a290612fae565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106121cd576121cd612e00565b602090810291909101015292915050565b6001600160a01b0384163b156115a15760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061222290899089908890889088906004016132ee565b6020604051808303816000875af192505050801561225d575060408051601f3d908101601f1916820190925261225a918101906131e4565b60015b61226957611f89613201565b6001600160e01b0319811663f23a6e6160e01b146119435760405162461bcd60e51b81526004016106a2906132a6565b6001600160a01b0385166123215760005b835181101561231f578281815181106122c5576122c5612e00565b602002602001015161019160008684815181106122e4576122e4612e00565b6020026020010151815260200190815260200160002060008282546123099190612ece565b90915550612318905081612e2c565b90506122aa565b505b6001600160a01b0384166115a15760005b835181101561194357600084828151811061234f5761234f612e00565b60200260200101519050600084838151811061236d5761236d612e00565b6020026020010151905060006101916000848152602001908152602001600020549050818110156123f15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016106a2565b600092835261019160205260409092209103905561240e81612e2c565b9050612332565b61241e81612059565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6124bd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106a2565b600080846001600160a01b0316846040516124d89190613331565b600060405180830381855af49150503d8060008114612513576040519150601f19603f3d011682016040523d82523d6000602084013e612518565b606091505b5091509150612540828260405180606001604052806027815260200161336e60279139612549565b95945050505050565b60608315612558575081612562565b6125628383612569565b9392505050565b815115611fa85781518083602001fd5b80356001600160a01b038116811461259057600080fd5b919050565b600080604083850312156125a857600080fd5b6125b183612579565b946020939093013593505050565b6001600160e01b0319811681146108fe57600080fd5b6000602082840312156125e757600080fd5b8135612562816125bf565b60006020828403121561260457600080fd5b5035919050565b60005b8381101561262657818101518382015260200161260e565b50506000910152565b6000815180845261264781602086016020860161260b565b601f01601f19169290920160200192915050565b602081526000612562602083018461262f565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156126aa576126aa61266e565b6040525050565b600067ffffffffffffffff8211156126cb576126cb61266e565b5060051b60200190565b600082601f8301126126e657600080fd5b813560206126f3826126b1565b6040516127008282612684565b83815260059390931b850182019282810191508684111561272057600080fd5b8286015b8481101561273b5780358352918301918301612724565b509695505050505050565b600082601f83011261275757600080fd5b813567ffffffffffffffff8111156127715761277161266e565b604051612788601f8301601f191660200182612684565b81815284602083860101111561279d57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156127d057600080fd5b6127d985612579565b9350602085013567ffffffffffffffff808211156127f657600080fd5b612802888389016126d5565b9450604087013591508082111561281857600080fd5b612824888389016126d5565b9350606087013591508082111561283a57600080fd5b5061284787828801612746565b91505092959194509250565b600080600080600060a0868803121561286b57600080fd5b61287486612579565b945061288260208701612579565b9350604086013567ffffffffffffffff8082111561289f57600080fd5b6128ab89838a016126d5565b945060608801359150808211156128c157600080fd5b6128cd89838a016126d5565b935060808801359150808211156128e357600080fd5b506128f088828901612746565b9150509295509295909350565b60006020828403121561290f57600080fd5b61256282612579565b60008060006060848603121561292d57600080fd5b833567ffffffffffffffff81111561294457600080fd5b61295086828701612746565b93505061295f60208501612579565b915061296d60408501612579565b90509250925092565b6000806040838503121561298957600080fd5b823567ffffffffffffffff808211156129a157600080fd5b818501915085601f8301126129b557600080fd5b813560206129c2826126b1565b6040516129cf8282612684565b83815260059390931b85018201928281019150898411156129ef57600080fd5b948201945b83861015612a1457612a0586612579565b825294820194908201906129f4565b96505086013592505080821115612a2a57600080fd5b50612a37858286016126d5565b9150509250929050565b600081518084526020808501945080840160005b83811015612a7157815187529582019590820190600101612a55565b509495945050505050565b6020815260006125626020830184612a41565b60008060408385031215612aa257600080fd5b612aab83612579565b9150602083013567ffffffffffffffff811115612ac757600080fd5b612a3785828601612746565b600080600060608486031215612ae857600080fd5b612af184612579565b9250602084013567ffffffffffffffff80821115612b0e57600080fd5b612b1a878388016126d5565b93506040860135915080821115612b3057600080fd5b50612b3d868287016126d5565b9150509250925092565b600080600060608486031215612b5c57600080fd5b612b6584612579565b95602085013595506040909401359392505050565b60008060008060808587031215612b9057600080fd5b612b9985612579565b93506020850135925060408501359150606085013567ffffffffffffffff811115612bc357600080fd5b61284787828801612746565b600060208284031215612be157600080fd5b813567ffffffffffffffff811115612bf857600080fd5b612c0484828501612746565b949350505050565b60008060408385031215612c1f57600080fd5b612c2883612579565b915060208301358015158114612c3d57600080fd5b809150509250929050565b60008060408385031215612c5b57600080fd5b612c6483612579565b9150612c7260208401612579565b90509250929050565b600080600080600060a08688031215612c9357600080fd5b612c9c86612579565b9450612caa60208701612579565b93506040860135925060608601359150608086013567ffffffffffffffff811115612cd457600080fd5b6128f088828901612746565b600181811c90821680612cf457607f821691505b602082108103612d1457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612e3e57612e3e612e16565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b808201808211156106d1576106d1612e16565b604081526000612ef46040830185612a41565b82810360208401526125408185612a41565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600060208284031215612fa757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b601f821115610dde57600081815260208120601f850160051c810160208610156130a75750805b601f850160051c820191505b818110156115a1578281556001016130b3565b815167ffffffffffffffff8111156130e0576130e061266e565b6130f4816130ee8454612ce0565b84613080565b602080601f83116001811461312957600084156131115750858301515b600019600386901b1c1916600185901b1785556115a1565b600085815260208120601f198616915b8281101561315857888601518255948401946001909101908401613139565b50858210156131765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160a01b03808816835280871660208401525060a060408301526131b260a0830186612a41565b82810360608401526131c48186612a41565b905082810360808401526131d8818561262f565b98975050505050505050565b6000602082840312156131f657600080fd5b8151612562816125bf565b600060033d1115610dd05760046000803e5060005160e01c90565b600060443d101561322a5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561325a57505050505090565b82850191508151818111156132725750505050505090565b843d870101602082850101111561328c5750505050505090565b61329b60208286010187612684565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261332660a083018461262f565b979650505050505050565b6000825161334381846020870161260b565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122084541d30212fb354d528d1a32753110526ff58dbf1983a680952c12ea4c2269564736f6c63430008110033";

type JasmineEATConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JasmineEATConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JasmineEAT__factory extends ContractFactory {
  constructor(...args: JasmineEATConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JasmineEAT> {
    return super.deploy(overrides || {}) as Promise<JasmineEAT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JasmineEAT {
    return super.attach(address) as JasmineEAT;
  }
  override connect(signer: Signer): JasmineEAT__factory {
    return super.connect(signer) as JasmineEAT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JasmineEATInterface {
    return new utils.Interface(_abi) as JasmineEATInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JasmineEAT {
    return new Contract(address, _abi, signerOrProvider) as JasmineEAT;
  }
}
