"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JasmineMinter__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
            {
                internalType: "address",
                name: "_oracle",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "newBridge",
                type: "address",
            },
        ],
        name: "BridgeChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "BurnedBatch",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "BurnedSingle",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "nonce",
                type: "bytes32",
            },
        ],
        name: "NonceConsumed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferStarted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        inputs: [],
        name: "CONSUMENONCE_TYPEHASH",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MINTBATCH_TYPEHASH",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MINT_TYPEHASH",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "bridge",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "burnBatch",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "nonce",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "sig",
                type: "bytes",
            },
        ],
        name: "consumeNonce",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "consumedNonces",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "initialName",
                type: "string",
            },
            {
                internalType: "string",
                name: "initialVersion",
                type: "string",
            },
            {
                internalType: "address",
                name: "initialBridge",
                type: "address",
            },
            {
                internalType: "address",
                name: "initialOwner",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "transferData",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "nonce",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "sig",
                type: "bytes",
            },
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
            {
                internalType: "bytes",
                name: "transferData",
                type: "bytes",
            },
            {
                internalType: "bytes[]",
                name: "oracleDatas",
                type: "bytes[]",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "nonce",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "sig",
                type: "bytes",
            },
        ],
        name: "mintBatch",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "oracle",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pendingOwner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proxiableUUID",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newBridge",
                type: "address",
            },
        ],
        name: "setBridge",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "token",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60e0604052306080523480156200001557600080fd5b5060405162002cd638038062002cd683398101604081905262000038916200006d565b6001600160a01b0391821660a0521660c052620000a5565b80516001600160a01b03811681146200006857600080fd5b919050565b600080604083850312156200008157600080fd5b6200008c8362000050565b91506200009c6020840162000050565b90509250929050565b60805160a05160c051612b8362000153600039600081816102d5015281816108930152610c680152600081816104da0152818161095601528181610ce90152818161102e01528181611156015281816114ed01526116470152600081816109e801528181610a2801528181610d6b01528181610dab01528181610e2701528181610f8201528181610fc2015281816112dd0152818161131d0152818161144901526114890152612b836000f3fe6080604052600436106101665760003560e01c806380a5a371116100d1578063e090fa3c1161008a578063e922ba7911610064578063e922ba7914610454578063f2fde38b14610474578063f76fc35e14610494578063fc0c546a146104c857600080fd5b8063e090fa3c146103f5578063e30c397814610415578063e78cea921461043357600080fd5b806380a5a3711461030f5780638da5cb5b1461032f5780638dd148021461034d5780638f15b4141461036d578063b3c9ed591461038d578063ce89a040146103c157600080fd5b80634f1ef286116101235780634f1ef2861461025c57806352d1902d1461026f57806354fd4d5014610284578063715018a61461029957806379ba5097146102ae5780637dc0d1d0146102c357600080fd5b806306fdde031461016b57806310dbebce14610196578063163c50ac146101d75780633644e515146101f95780633659cfe61461021c57806336b092271461023c575b600080fd5b34801561017757600080fd5b506101806104fc565b60405161018d9190612125565b60405180910390f35b3480156101a257600080fd5b506101c76101b1366004612138565b6101326020526000908152604090205460ff1681565b604051901515815260200161018d565b3480156101e357600080fd5b506101f76101f2366004612333565b61058b565b005b34801561020557600080fd5b5061020e6109cf565b60405190815260200161018d565b34801561022857600080fd5b506101f7610237366004612429565b6109de565b34801561024857600080fd5b506101f7610257366004612444565b610aa6565b6101f761026a3660046124c3565b610d61565b34801561027b57600080fd5b5061020e610e1a565b34801561029057600080fd5b50610180610edf565b3480156102a557600080fd5b506101f7610eed565b3480156102ba57600080fd5b506101f7610f01565b3480156102cf57600080fd5b506102f77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161018d565b34801561031b57600080fd5b506101f761032a366004612511565b610f78565b34801561033b57600080fd5b506033546001600160a01b03166102f7565b34801561035957600080fd5b506101f7610368366004612429565b6111c0565b34801561037957600080fd5b506101f7610388366004612561565b611213565b34801561039957600080fd5b5061020e7f47b77ff24f11d889436314cd63fdefeb0b0f9531da691f5627f546c47e5f002c81565b3480156103cd57600080fd5b5061020e7fb0426304b718d58e27f05888d480cc1c9c956afaab3ba8d45afcce29f30d644881565b34801561040157600080fd5b506101f76104103660046125e6565b61143f565b34801561042157600080fd5b506065546001600160a01b03166102f7565b34801561043f57600080fd5b5061012f546102f7906001600160a01b031681565b34801561046057600080fd5b506101f761046f366004612664565b611688565b34801561048057600080fd5b506101f761048f366004612429565b6117b7565b3480156104a057600080fd5b5061020e7f7ed266a150d7268b399e18c9036ad7ff35a4bf8f1ddf162234a3684916e16dc881565b3480156104d457600080fd5b506102f77f000000000000000000000000000000000000000000000000000000000000000081565b610130805461050a90612695565b80601f016020809104026020016040519081016040528092919081815260200182805461053690612695565b80156105835780601f1061055857610100808354040283529160200191610583565b820191906000526020600020905b81548152906001019060200180831161056657829003601f168201915b505050505081565b83518751146105fc5760405162461bcd60e51b815260206004820152603260248201527f4a61736d696e654d696e7465723a2069647320616e64206f7261636c654461746044820152710c2e640d8cadccee8d040dad2e6dac2e8c6d60731b60648201526084015b60405180910390fd5b824211156106455760405162461bcd60e51b815260206004820152601660248201527512985cdb5a5b99535a5b9d195c8e88195e1c1a5c995960521b60448201526064016105f3565b6000845167ffffffffffffffff8111156106615761066161216d565b60405190808252806020026020018201604052801561068a578160200160208202803683370190505b50905060005b85518110156106ec578581815181106106ab576106ab6126cf565b60200260200101518051906020012060001c8282815181106106cf576106cf6126cf565b6020908102919091010152806106e4816126e5565b915050610690565b508751600590811b6020808b01919091208951831b8a830120845190931b84830120604080517f47b77ff24f11d889436314cd63fdefeb0b0f9531da691f5627f546c47e5f002c8186015233818301526060810193909352608083019490945260a082015260c0810187905260e080820187905283518083039091018152610100909101909252815191012061012f546001600160a01b031661079761079183611828565b8561187c565b6001600160a01b0316146107bd5760405162461bcd60e51b81526004016105f39061270c565b6000848152610132602052604090205460ff161561081d5760405162461bcd60e51b815260206004820152601b60248201527f4a61736d696e654d696e7465723a206e6f6e6365207265706c6179000000000060448201526064016105f3565b60008481526101326020526040808220805460ff191660011790555185917f70cd0c14252edef0440009634a4e86036a1747c9fbe7e4c2c05b8b62f9c410e291a260005b865181101561093e57600087828151811061087e5761087e6126cf565b60200260200101519050805160001461092b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166307e3810c8c84815181106108d2576108d26126cf565b6020026020010151836040518363ffffffff1660e01b81526004016108f8929190612755565b600060405180830381600087803b15801561091257600080fd5b505af1158015610926573d6000803e3d6000fd5b505050505b5080610936816126e5565b915050610861565b50604051630fbfeffd60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f7fdffa90610991908d908d908d908d906004016127b1565b600060405180830381600087803b1580156109ab57600080fd5b505af11580156109bf573d6000803e3d6000fd5b5050505050505050505050505050565b60006109d96118a0565b905090565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a265760405162461bcd60e51b81526004016105f390612804565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a586118d7565b6001600160a01b031614610a7e5760405162461bcd60e51b81526004016105f390612850565b610a8781611905565b60408051600080825260208201909252610aa39183919061190d565b50565b82421115610aef5760405162461bcd60e51b815260206004820152601660248201527512985cdb5a5b99535a5b9d195c8e88195e1c1a5c995960521b60448201526064016105f3565b8351602080860191909120604080517f7ed266a150d7268b399e18c9036ad7ff35a4bf8f1ddf162234a3684916e16dc8818501523381830152606081018b9052608081018a905260a081019290925260c0820186905260e0808301869052815180840390910181526101009092019052805191012061012f546001600160a01b0316610b83610b7d83611828565b8461187c565b6001600160a01b031614610ba95760405162461bcd60e51b81526004016105f39061270c565b6000838152610132602052604090205460ff1615610c095760405162461bcd60e51b815260206004820152601b60248201527f4a61736d696e654d696e7465723a206e6f6e6365207265706c6179000000000060448201526064016105f3565b60008381526101326020526040808220805460ff191660011790555184917f70cd0c14252edef0440009634a4e86036a1747c9fbe7e4c2c05b8b62f9c410e291a2845115610cd2576040516301f8e04360e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906307e3810c90610c9f908b908990600401612755565b600060405180830381600087803b158015610cb957600080fd5b505af1158015610ccd573d6000803e3d6000fd5b505050505b60405163731133e960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063731133e990610d24908c908c908c908c9060040161289c565b600060405180830381600087803b158015610d3e57600080fd5b505af1158015610d52573d6000803e3d6000fd5b50505050505050505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610da95760405162461bcd60e51b81526004016105f390612804565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ddb6118d7565b6001600160a01b031614610e015760405162461bcd60e51b81526004016105f390612850565b610e0a82611905565b610e168282600161190d565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eba5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105f3565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610131805461050a90612695565b610ef5611a8f565b610eff6000611ae9565b565b60655433906001600160a01b03168114610f6f5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016105f3565b610aa381611ae9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610fc05760405162461bcd60e51b81526004016105f390612804565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ff26118d7565b6001600160a01b0316146110185760405162461bcd60e51b81526004016105f390612850565b6040516303a6b01160e61b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e9ac044090602401602060405180830381865afa15801561107d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a191906128d4565b156110ee5760405162461bcd60e51b815260206004820152601c60248201527f4a61736d696e654d696e7465723a2066726f7a656e207365726965730000000060448201526064016105f3565b336001600160a01b03167f422475c8264e559fa982d4f66450a9bd1d5bee42cf8a98f6e032d1715b85955284848460405161112b939291906128f6565b60405180910390a2604051637a94c56560e11b815233600482015260248101849052604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f5298aca906064015b600060405180830381600087803b1580156111a357600080fd5b505af11580156111b7573d6000803e3d6000fd5b50505050505050565b6111c8611a8f565b61012f80546001600160a01b0319166001600160a01b0383169081179091556040517f9775531310b2880b61484ed85cbb0b491c8fde3a07f289c63b9255178279449790600090a250565b600054610100900460ff16158080156112335750600054600160ff909116105b8061124d5750303b15801561124d575060005460ff166001145b6112b05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f3565b6000805460ff1916600117905580156112d3576000805461ff0019166101001790555b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361131b5760405162461bcd60e51b81526004016105f390612804565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661134d6118d7565b6001600160a01b0316146113735760405162461bcd60e51b81526004016105f390612850565b61137c82611ae9565b611384611b02565b61138e8585611b29565b61013061139b8682612963565b506101316113a98582612963565b5061012f80546001600160a01b0319166001600160a01b0385169081179091556040517f9775531310b2880b61484ed85cbb0b491c8fde3a07f289c63b9255178279449790600090a28015611438576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114875760405162461bcd60e51b81526004016105f390612804565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114b96118d7565b6001600160a01b0316146114df5760405162461bcd60e51b81526004016105f390612850565b60005b83518110156115f2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e9ac044085838151811061152c5761152c6126cf565b60200260200101516040518263ffffffff1660e01b815260040161155291815260200190565b602060405180830381865afa15801561156f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159391906128d4565b156115e05760405162461bcd60e51b815260206004820152601c60248201527f4a61736d696e654d696e7465723a2066726f7a656e207365726965730000000060448201526064016105f3565b806115ea816126e5565b9150506114e2565b50336001600160a01b03167ff989b967ab06cb95ffa87edfc41b030132a3a687e55e92faf63512234d18e28f84848460405161163093929190612a23565b60405180910390a2604051631ac8311560e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636b20c4549061118990339087908790600401612a5c565b604080517fb0426304b718d58e27f05888d480cc1c9c956afaab3ba8d45afcce29f30d64486020808301919091528183018590528251808303840181526060909201909252805191012061012f546001600160a01b03166116eb610b7d83611828565b6001600160a01b0316146117115760405162461bcd60e51b81526004016105f39061270c565b6000838152610132602052604090205460ff16156117715760405162461bcd60e51b815260206004820152601b60248201527f4a61736d696e654d696e7465723a206e6f6e6365207265706c6179000000000060448201526064016105f3565b60008381526101326020526040808220805460ff191660011790555184917f70cd0c14252edef0440009634a4e86036a1747c9fbe7e4c2c05b8b62f9c410e291a2505050565b6117bf611a8f565b606580546001600160a01b0383166001600160a01b031990911681179091556117f06033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60006118766118356118a0565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061188b8585611b5a565b9150915061189881611b9f565b509392505050565b60006109d97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6118cf60fb5490565b60fc54611ce9565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b610aa3611a8f565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156119455761194083611d33565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561199f575060408051601f3d908101601f1916820190925261199c91810190612a90565b60015b611a025760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105f3565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611a835760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105f3565b50611940838383611de1565b6033546001600160a01b03163314610eff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f3565b606580546001600160a01b0319169055610aa381611e0c565b600054610100900460ff16610eff5760405162461bcd60e51b81526004016105f390612aa9565b600054610100900460ff16611b505760405162461bcd60e51b81526004016105f390612aa9565b610e168282611e5e565b6000808251604103611b905760208301516040840151606085015160001a611b8487828585611e9f565b94509450505050611b98565b506000905060025b9250929050565b6000816004811115611bb357611bb3612af4565b03611bbb5750565b6001816004811115611bcf57611bcf612af4565b03611c1c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f3565b6002816004811115611c3057611c30612af4565b03611c7d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f3565b6003816004811115611c9157611c91612af4565b03610aa35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f3565b6040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090505b9392505050565b6001600160a01b0381163b611da05760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105f3565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b611dea83611f63565b600082511180611df75750805b1561194057611e068383611fa3565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611e855760405162461bcd60e51b81526004016105f390612aa9565b81516020928301208151919092012060fb9190915560fc55565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ed65750600090506003611f5a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611f2a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611f5357600060019250925050611f5a565b9150600090505b94509492505050565b611f6c81611d33565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61200b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105f3565b600080846001600160a01b0316846040516120269190612b0a565b600060405180830381855af49150503d8060008114612061576040519150601f19603f3d011682016040523d82523d6000602084013e612066565b606091505b509150915061208e8282604051806060016040528060278152602001612b2760279139612097565b95945050505050565b606083156120a6575081611d2c565b611d2c83838151156120bb5781518083602001fd5b8060405162461bcd60e51b81526004016105f39190612125565b60005b838110156120f05781810151838201526020016120d8565b50506000910152565b600081518084526121118160208601602086016120d5565b601f01601f19169290920160200192915050565b602081526000611d2c60208301846120f9565b60006020828403121561214a57600080fd5b5035919050565b80356001600160a01b038116811461216857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156121ac576121ac61216d565b604052919050565b600067ffffffffffffffff8211156121ce576121ce61216d565b5060051b60200190565b600082601f8301126121e957600080fd5b813560206121fe6121f9836121b4565b612183565b82815260059290921b8401810191818101908684111561221d57600080fd5b8286015b848110156122385780358352918301918301612221565b509695505050505050565b600082601f83011261225457600080fd5b813567ffffffffffffffff81111561226e5761226e61216d565b612281601f8201601f1916602001612183565b81815284602083860101111561229657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126122c457600080fd5b813560206122d46121f9836121b4565b82815260059290921b840181019181810190868411156122f357600080fd5b8286015b8481101561223857803567ffffffffffffffff8111156123175760008081fd5b6123258986838b0101612243565b8452509183019183016122f7565b600080600080600080600080610100898b03121561235057600080fd5b61235989612151565b9750602089013567ffffffffffffffff8082111561237657600080fd5b6123828c838d016121d8565b985060408b013591508082111561239857600080fd5b6123a48c838d016121d8565b975060608b01359150808211156123ba57600080fd5b6123c68c838d01612243565b965060808b01359150808211156123dc57600080fd5b6123e88c838d016122b3565b955060a08b0135945060c08b0135935060e08b013591508082111561240c57600080fd5b506124198b828c01612243565b9150509295985092959890939650565b60006020828403121561243b57600080fd5b611d2c82612151565b600080600080600080600080610100898b03121561246157600080fd5b61246a89612151565b97506020890135965060408901359550606089013567ffffffffffffffff8082111561249557600080fd5b6124a18c838d01612243565b965060808b01359150808211156124b757600080fd5b6123e88c838d01612243565b600080604083850312156124d657600080fd5b6124df83612151565b9150602083013567ffffffffffffffff8111156124fb57600080fd5b61250785828601612243565b9150509250929050565b60008060006060848603121561252657600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561254b57600080fd5b61255786828701612243565b9150509250925092565b6000806000806080858703121561257757600080fd5b843567ffffffffffffffff8082111561258f57600080fd5b61259b88838901612243565b955060208701359150808211156125b157600080fd5b506125be87828801612243565b9350506125cd60408601612151565b91506125db60608601612151565b905092959194509250565b6000806000606084860312156125fb57600080fd5b833567ffffffffffffffff8082111561261357600080fd5b61261f878388016121d8565b9450602086013591508082111561263557600080fd5b612641878388016121d8565b9350604086013591508082111561265757600080fd5b5061255786828701612243565b6000806040838503121561267757600080fd5b82359150602083013567ffffffffffffffff8111156124fb57600080fd5b600181811c908216806126a957607f821691505b6020821081036126c957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161270557634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526029908201527f4a61736d696e654d696e7465723a20626164207369676e61747572652f77726f60408201526837339039b4b3b732b960b91b606082015260800190565b82815260406020820152600061276e60408301846120f9565b949350505050565b600081518084526020808501945080840160005b838110156127a65781518752958201959082019060010161278a565b509495945050505050565b6001600160a01b03851681526080602082015260006127d36080830186612776565b82810360408401526127e58186612776565b905082810360608401526127f981856120f9565b979650505050505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b03851681528360208201528260408201526080606082015260006128ca60808301846120f9565b9695505050505050565b6000602082840312156128e657600080fd5b81518015158114611d2c57600080fd5b83815282602082015260606040820152600061208e60608301846120f9565b601f82111561194057600081815260208120601f850160051c8101602086101561293c5750805b601f850160051c820191505b8181101561295b57828155600101612948565b505050505050565b815167ffffffffffffffff81111561297d5761297d61216d565b6129918161298b8454612695565b84612915565b602080601f8311600181146129c657600084156129ae5750858301515b600019600386901b1c1916600185901b17855561295b565b600085815260208120601f198616915b828110156129f5578886015182559484019460019091019084016129d6565b5085821015612a135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b606081526000612a366060830186612776565b8281036020840152612a488186612776565b905082810360408401526128ca81856120f9565b6001600160a01b0384168152606060208201526000612a7e6060830185612776565b82810360408401526128ca8185612776565b600060208284031215612aa257600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b60008251612b1c8184602087016120d5565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e42fe08ebe380d98434ba1db930c7842474234346d78c9c71c1c3ffbd19c604664736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class JasmineMinter__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_token, _oracle, overrides) {
        return super.deploy(_token, _oracle, overrides || {});
    }
    getDeployTransaction(_token, _oracle, overrides) {
        return super.getDeployTransaction(_token, _oracle, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.JasmineMinter__factory = JasmineMinter__factory;
